<div xmlns="http://www.w3.org/1999/html">
    {{ form_start(form, {'attr': {'class': 'form-horizontal'}}) }}

    {# Les erreurs générales du formulaire. #}
    {{ form_errors(form) }}

    <div class="form-group row">
        <div class="col-sm-12">
        {{ form_row(form.name) }}
        {{ form_row(form.description) }}
        {{ form_row(form.category) }}
            <div class="mar-bottom-sm">
            {{ form_row(form.images) }}
            <a href="#" id="add_image" class="btn btn-default">Ajouter une autre image</a>
            </div>
            <div class="mar-bottom-sm">
            {{ form_row(form.videos) }}
            <a href="#" id="add_video" class="btn btn-default">Ajouter une autre vidéo</a>
            </div>

        <div class="mar-top-md">
         {# Pour le bouton, pas de label ni d'erreur, on affiche juste le widget #}
         {{ form_widget(form.envoyer, {'attr': {'class': 'btn btn-primary'}}) }}
        </div>
        {# Génération automatique des champs pas encore écrits. Ce serait le champ CSRF (géré automatiquement par Symfony !) et tous les champs cachés (type « hidden »). #}
        {{ form_rest(form) }}

        </div>
    </div>
    {# Fermeture de la balise <form> du formulaire HTML #}
    {{ form_end(form) }}
</div>

{# On charge la bibliothèque jQuery. Ici, je la prends depuis le CDN google
   mais si vous l'avez en local, changez simplement l'adresse. #}
<script src="//ajax.googleapis.com/ajax/libs/jquery/1.11.1/jquery.min.js"></script>


<script type="text/javascript">

    $(document).ready(function() {
        // On récupère la balise <div> en question qui contient l'attribut « data-prototype » qui nous intéresse.
        var $container = $('div#trick_images');
        // On définit un compteur unique pour nommer les champs qu'on va ajouter dynamiquement
        var index = $container.find(':input').length;
        // On ajoute un nouveau champ à chaque clic sur le lien d'ajout.
        $('#add_image').click(function(e) {
            addImage($container);
            e.preventDefault(); // évite qu'un # apparaisse dans l'URL
            return false;
        });

        // La fonction qui ajoute un formulaire ImageType
        function addImage($container) {
            // Dans le contenu de l'attribut « data-prototype », on remplace :
            // - le texte "__name__label__" qu'il contient par le label du champ
            // - le texte "__name__" qu'il contient par le numéro du champ
            var template = $container.attr('data-prototype')
                .replace(/__name__label__/g, 'Image n°' + (index+1))
                .replace(/__name__/g,        index)
            ;
            // On crée un objet jquery qui contient ce template
            var $prototype = $(template);
            // On ajoute au prototype un lien pour pouvoir supprimer l'image
            addDeleteLink($prototype);
            // On ajoute le prototype modifié à la fin de la balise <div>
            $container.append($prototype);
            // Enfin, on incrémente le compteur pour que le prochain ajout se fasse avec un autre numéro
            index++;
        }
        // La fonction qui ajoute un lien de suppression d'une image
        function addDeleteLink($prototype) {
            // Création du lien
            var $deleteLink = $('<a href="#" class="btn btn-danger">Supprimer</a>');
            // Ajout du lien
            $prototype.append($deleteLink);
            // Ajout du listener sur le clic du lien pour effectivement supprimer l'image
            $deleteLink.click(function(e) {
                $prototype.remove();
                e.preventDefault(); // évite qu'un # apparaisse dans l'URL
                return false;
            });
        }
    });
</script>

<script type="text/javascript">
    $(document).ready(function() {
        // On récupère la balise <div> en question qui contient l'attribut « data-prototype » qui nous intéresse.
        var $container = $('div#trick_videos');
        // On définit un compteur unique pour nommer les champs qu'on va ajouter dynamiquement
        var index = $container.find(':input').length;
        // On ajoute un nouveau champ à chaque clic sur le lien d'ajout.
        $('#add_video').click(function(e) {
            addVideo($container);
            e.preventDefault(); // évite qu'un # apparaisse dans l'URL
            return false;
        });
        
        // La fonction qui ajoute un formulaire VideoType
        function addVideo($container) {
            // Dans le contenu de l'attribut « data-prototype », on remplace :
            // - le texte "__name__label__" qu'il contient par le label du champ
            // - le texte "__name__" qu'il contient par le numéro du champ
            var template = $container.attr('data-prototype')
                .replace(/__name__label__/g, 'Video n°' + (index+1))
                //.replace(/__name__/g,        index)
            ;
            // On crée un objet jquery qui contient ce template
            var $prototype = $(template);
            // On ajoute au prototype un lien pour pouvoir supprimer la vidéo
            addDeleteLink($prototype);
            // On ajoute le prototype modifié à la fin de la balise <div>
            $container.append($prototype);
            // Enfin, on incrémente le compteur pour que le prochain ajout se fasse avec un autre numéro
            index++;
        }
        // La fonction qui ajoute un lien de suppression d'une vidéo
        function addDeleteLink($prototype) {
            // Création du lien
            var $deleteLink = $('<a href="#" class="btn btn-danger">Supprimer</a>');
            // Ajout du lien
            $prototype.append($deleteLink);
            // Ajout du listener sur le clic du lien pour effectivement supprimer la vidéo
            $deleteLink.click(function(e) {
                $prototype.remove();
                e.preventDefault(); // évite qu'un # apparaisse dans l'URL
                return false;
            });
        }
    });
</script>



